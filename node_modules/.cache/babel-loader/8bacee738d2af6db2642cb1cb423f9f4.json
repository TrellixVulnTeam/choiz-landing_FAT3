{"ast":null,"code":"var _jsxFileName = \"/Users/analauraparlante/repos/landing-choiz/src/components/FrequentQuestions.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Collapsible from './Collapsible';\nimport { QuestionsContext } from '../context/QuestionsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FrequentQuestions = () => {\n  _s();\n\n  const {\n    questionsData\n  } = useContext(QuestionsContext);\n  const [questionOpen, setQuestionOpen] = useState();\n\n  const handleChange = id => {\n    setQuestionOpen(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"second-section-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Preguntas frecuentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), questionsData && questionsData.data.map(item => {\n      if (item.enabled === true) return /*#__PURE__*/_jsxDEV(Collapsible, {\n        title: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FrequentQuestions, \"lh1mQ03gXfxXCYBcH9K98F41yps=\");\n\n_c = FrequentQuestions;\nexport default FrequentQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"FrequentQuestions\");","map":{"version":3,"names":["useContext","useState","Collapsible","QuestionsContext","FrequentQuestions","questionsData","questionOpen","setQuestionOpen","handleChange","id","data","map","item","enabled","title"],"sources":["/Users/analauraparlante/repos/landing-choiz/src/components/FrequentQuestions.tsx"],"sourcesContent":["import { useContext, useState } from 'react';\nimport Collapsible from './Collapsible';\nimport { QuestionsContext } from '../context/QuestionsContext';\nimport Arrow from '../assets/arrow.svg';\n\nconst FrequentQuestions = () => {\n    const { questionsData } = useContext(QuestionsContext);\n    const [questionOpen, setQuestionOpen] = useState();\n\n    const handleChange = (id: any) => {\n        setQuestionOpen(id);\n    }\n\n    return (\n        <section className='second-section-wrapper'>\n            <h2>Preguntas frecuentes</h2>\n            {questionsData && (\n                questionsData.data.map((item: { title: string; description: string; id: string; enabled: boolean }) => {\n                    if(item.enabled === true)\n                    return (\n                        <Collapsible \n                            title={item.title}\n                        />\n                        )\n                })\n                )}   \n        </section>\n    );\n}\n\nexport default FrequentQuestions;"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EAC5B,MAAM;IAAEC;EAAF,IAAoBL,UAAU,CAACG,gBAAD,CAApC;EACA,MAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;;EAEA,MAAMO,YAAY,GAAIC,EAAD,IAAa;IAC9BF,eAAe,CAACE,EAAD,CAAf;EACH,CAFD;;EAIA,oBACI;IAAS,SAAS,EAAC,wBAAnB;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKJ,aAAa,IACVA,aAAa,CAACK,IAAd,CAAmBC,GAAnB,CAAwBC,IAAD,IAAgF;MACnG,IAAGA,IAAI,CAACC,OAAL,KAAiB,IAApB,EACA,oBACI,QAAC,WAAD;QACI,KAAK,EAAED,IAAI,CAACE;MADhB;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CAPD,CAHR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAvBD;;GAAMV,iB;;KAAAA,iB;AAyBN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}