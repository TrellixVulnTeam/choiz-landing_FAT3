{"ast":null,"code":"var _jsxFileName = \"/Users/analauraparlante/repos/landing-choiz/src/context/QuestionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionsContext = /*#__PURE__*/createContext({\n  questionsData: null,\n  setQuestionsData: () => null,\n  loadQuestionsData: async () => {}\n});\nexport const QuestionsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [questionsData, setQuestionsData] = useState(null);\n  const url = 'https://run.mocky.io/v3/6f0fb5ae-1758-4537-84c7-f6669edd614f';\n\n  const loadQuestionsData = async () => {\n    fetch(url).then(response => response.json()).then(data => {\n      setQuestionsData(data.data);\n    });\n  };\n\n  const value = {\n    questionsData,\n    setQuestionsData,\n    loadQuestionsData\n  };\n  useEffect(() => {\n    loadQuestionsData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(QuestionsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionsProvider, \"f1ipgmCRPL2xsGlotYXUYj8TlnA=\");\n\n_c = QuestionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","QuestionsContext","questionsData","setQuestionsData","loadQuestionsData","QuestionsProvider","children","url","fetch","then","response","json","data","value"],"sources":["/Users/analauraparlante/repos/landing-choiz/src/context/QuestionsContext.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport {Â ContextQuestionsProps } from '../types/types';\nimport { QuestionsData, ChildrenProps } from '../types/types';\nimport { useState, useEffect } from 'react';\n\nexport const QuestionsContext = createContext<ContextQuestionsProps>({\n    questionsData: null,\n    setQuestionsData: () => null,\n    loadQuestionsData: async () => {},\n});\n\nexport const QuestionsProvider = ({ children }: ChildrenProps) => {\n    const [questionsData, setQuestionsData] = useState<QuestionsData | null>(null);\n    const url = 'https://run.mocky.io/v3/6f0fb5ae-1758-4537-84c7-f6669edd614f';\n\n    const loadQuestionsData = async () => {\n        fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n            setQuestionsData(data.data);\n        });\n    };\n\n    const value = {\n        questionsData,\n        setQuestionsData,\n        loadQuestionsData,\n    }\n\n    useEffect(() => {\n        loadQuestionsData();\n      }, []);\n\n      return (\n        <QuestionsContext.Provider value={value}>\n            {children}\n        </QuestionsContext.Provider>\n      )\n}"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AAGA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,CAAwB;EACjEI,aAAa,EAAE,IADkD;EAEjEC,gBAAgB,EAAE,MAAM,IAFyC;EAGjEC,iBAAiB,EAAE,YAAY,CAAE;AAHgC,CAAxB,CAAtC;AAMP,OAAO,MAAMC,iBAAiB,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC;EAAF,CAAgC;EAC9D,MAAM,CAACJ,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAuB,IAAvB,CAAlD;EACA,MAAMQ,GAAG,GAAG,8DAAZ;;EAEA,MAAMH,iBAAiB,GAAG,YAAY;IAClCI,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAU;MAChBT,gBAAgB,CAACS,IAAI,CAACA,IAAN,CAAhB;IACH,CAJD;EAKH,CAND;;EAQA,MAAMC,KAAK,GAAG;IACVX,aADU;IAEVC,gBAFU;IAGVC;EAHU,CAAd;EAMAJ,SAAS,CAAC,MAAM;IACZI,iBAAiB;EAClB,CAFM,EAEJ,EAFI,CAAT;EAIE,oBACE,QAAC,gBAAD,CAAkB,QAAlB;IAA2B,KAAK,EAAES,KAAlC;IAAA,UACKP;EADL;IAAA;IAAA;IAAA;EAAA,QADF;AAKL,CA3BM;;GAAMD,iB;;KAAAA,iB"},"metadata":{},"sourceType":"module"}