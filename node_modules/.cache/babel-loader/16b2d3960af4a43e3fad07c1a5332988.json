{"ast":null,"code":"var _jsxFileName = \"/Users/analauraparlante/repos/landing-choiz/src/context/MedicineContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MedicineContext = /*#__PURE__*/createContext({\n  medicinaData: null,\n  setMedicinaData: () => null,\n  loadMedicinaData: async () => {}\n});\nexport const MedicinaProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [medicinaData, setMedicinaData] = useState(null);\n  const url = 'https://run.mocky.io/v3/1f00949f-adc2-4484-ad6d-4f565e82ad30';\n\n  const loadMedicinaData = async () => {\n    fetch(url).then(response => response.json()).then(data => {\n      setMedicinaData(data.data);\n    });\n  };\n\n  const value = {\n    medicinaData,\n    setMedicinaData,\n    loadMedicinaData\n  };\n  useEffect(() => {\n    loadMedicinaData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MedicineContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MedicinaProvider, \"/jUo2Tbo/M3LYelXb0WPDQGIxhQ=\");\n\n_c = MedicinaProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicinaProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","MedicineContext","medicinaData","setMedicinaData","loadMedicinaData","MedicinaProvider","children","url","fetch","then","response","json","data","value"],"sources":["/Users/analauraparlante/repos/landing-choiz/src/context/MedicineContext.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport { ContextMedicinesProps } from '../types/types';\nimport { useState, useEffect } from 'react';\nimport { MedicinaData, ChildrenProps } from '../types/types';\n\nexport const MedicineContext = createContext<ContextMedicinesProps>({\n    medicinaData: null,\n    setMedicinaData: () => null,\n    loadMedicinaData: async () => {},\n  });\n\nexport const MedicinaProvider = ({ children }: ChildrenProps) => {\n    const [medicinaData, setMedicinaData] = useState<MedicinaData | null>(null);\n    const url = 'https://run.mocky.io/v3/1f00949f-adc2-4484-ad6d-4f565e82ad30';\n  \n    const loadMedicinaData = async () => {\n      fetch(url)\n          .then((response) => response.json())\n          .then((data) => {\n          setMedicinaData(data.data);\n        });\n    };\n  \n    const value = {\n      medicinaData,\n      setMedicinaData,\n      loadMedicinaData,\n    };\n  \n    useEffect(() => {\n      loadMedicinaData();\n    }, []);\n  \n    return (\n      <MedicineContext.Provider value={value}>\n        {children}\n      </MedicineContext.Provider>\n    );\n  };"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,OAAO,MAAMC,eAAe,gBAAGH,aAAa,CAAwB;EAChEI,YAAY,EAAE,IADkD;EAEhEC,eAAe,EAAE,MAAM,IAFyC;EAGhEC,gBAAgB,EAAE,YAAY,CAAE;AAHgC,CAAxB,CAArC;AAMP,OAAO,MAAMC,gBAAgB,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC;EAAF,CAAgC;EAC7D,MAAM,CAACJ,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAsB,IAAtB,CAAhD;EACA,MAAMQ,GAAG,GAAG,8DAAZ;;EAEA,MAAMH,gBAAgB,GAAG,YAAY;IACnCI,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAU;MAChBT,eAAe,CAACS,IAAI,CAACA,IAAN,CAAf;IACD,CAJH;EAKD,CAND;;EAQA,MAAMC,KAAK,GAAG;IACZX,YADY;IAEZC,eAFY;IAGZC;EAHY,CAAd;EAMAJ,SAAS,CAAC,MAAM;IACdI,gBAAgB;EACjB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAES,KAAjC;IAAA,UACGP;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA3BI;;GAAMD,gB;;KAAAA,gB"},"metadata":{},"sourceType":"module"}